<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\WM\WM.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\WM\WM.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Tue Apr 24 12:25:24 2018
<BR><P>
<H3>Maximum Stack Usage =        688 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; board_startup &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[24]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[c]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">BusFault_Handler</a><BR>
 <LI><a href="#[a]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">HardFault_Handler</a><BR>
 <LI><a href="#[b]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">MemManage_Handler</a><BR>
 <LI><a href="#[d]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[24]">ADC1_2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[41]">ADC3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4c]">ADC4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[c]">BusFault_Handler</a> from stm32f3xx_it.o(i.BusFault_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[27]">CAN_RX1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[28]">CAN_SCE_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4d]">COMP1_2_3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4e]">COMP4_5_6_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4f]">COMP7_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1f]">DMA1_Channel3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[20]">DMA1_Channel4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[21]">DMA1_Channel5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[22]">DMA1_Channel6_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[23]">DMA1_Channel7_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[47]">DMA2_Channel1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[48]">DMA2_Channel2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[49]">DMA2_Channel3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4a]">DMA2_Channel4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[4b]">DMA2_Channel5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[f]">DebugMon_Handler</a> from stm32f3xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[18]">EXTI0_IRQHandler</a> from stm32f3xx_it.o(i.EXTI0_IRQHandler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3a]">EXTI15_10_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[19]">EXTI1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1a]">EXTI2_TSC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1b]">EXTI3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[1c]">EXTI4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[29]">EXTI9_5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[16]">FLASH_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[53]">FPU_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[a]">HardFault_Handler</a> from stm32f3xx_it.o(i.HardFault_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[32]">I2C1_ER_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[31]">I2C1_EV_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[34]">I2C2_ER_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[33]">I2C2_EV_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[b]">MemManage_Handler</a> from stm32f3xx_it.o(i.MemManage_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[9]">NMI_Handler</a> from stm32f3xx_it.o(i.NMI_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[13]">PVD_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[10]">PendSV_Handler</a> from stm32f3xx_it.o(i.PendSV_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[17]">RCC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3b]">RTC_Alarm_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[15]">RTC_WKUP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[8]">Reset_Handler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[35]">SPI1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[36]">SPI2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[42]">SPI3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[e]">SVC_Handler</a> from stm32f3xx_it.o(i.SVC_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[11]">SysTick_Handler</a> from stm32f3xx_it.o(i.SysTick_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[55]">SystemInit</a> from system_stm32f3xx.o(i.SystemInit) referenced from startup_stm32f303xc.o(.text)
 <LI><a href="#[14]">TAMP_STAMP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2a]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2d]">TIM1_CC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2c]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2b]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2e]">TIM2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[2f]">TIM3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[30]">TIM4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[45]">TIM6_DAC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[46]">TIM7_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3d]">TIM8_BRK_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[40]">TIM8_CC_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3f]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3e]">TIM8_UP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[43]">UART4_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[44]">UART5_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[37]">USART1_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[38]">USART2_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[39]">USART3_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[3c]">USBWakeUp_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[52]">USBWakeUp_RMP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[25]">USB_HP_CAN_TX_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[50]">USB_HP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[26]">USB_LP_CAN_RX0_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[51]">USB_LP_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[d]">UsageFault_Handler</a> from stm32f3xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[12]">WWDG_IRQHandler</a> from startup_stm32f303xc.o(.text) referenced from startup_stm32f303xc.o(RESET)
 <LI><a href="#[57]">Stage::Stage()</a> from stage.o(i._ZN5StageC1Ev) referenced from program.o(i._ZN7ProgramC1EP19SevenSegmentDisplayP5MotorP5Timer)
 <LI><a href="#[58]">DoorButton::getButtonStatus() const</a> from door_button.o(i._ZNK10DoorButton15getButtonStatusEv) referenced from door_button.o(.constdata__ZTV10DoorButton)
 <LI><a href="#[59]">Button::getButtonStatus() const</a> from button.o(i._ZNK6Button15getButtonStatusEv) referenced from button.o(.constdata__ZTV6Button)
 <LI><a href="#[56]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f303xc.o(.text)
 <LI><a href="#[54]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[56]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(.text)
</UL>
<P><STRONG><a name="[9d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[9f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a0]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a1]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[a2]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[8]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>COMP1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>COMP4_5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>COMP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI2_TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USBWakeUp_RMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USB_HP_CAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USB_LP_CAN_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramManager::updateProgramStages(unsigned char) const
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramManager::getProgramOffset(unsigned char) const
</UL>

<P><STRONG><a name="[5b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a3]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f3xx_it.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>HAL_Delay</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32f3xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::checkTimer()
</UL>

<P><STRONG><a name="[60]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_hal_gpio.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f3xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[5f]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f3xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[6c]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f3xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[61]"></a>HAL_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f3xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_startup
</UL>

<P><STRONG><a name="[63]"></a>HAL_InitTick</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f3xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[64]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[67]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[62]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f3xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[69]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 638 bytes, Stack size 32 bytes, stm32f3xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_startup
</UL>

<P><STRONG><a name="[65]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f3xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[6a]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f3xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[6b]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1424 bytes, Stack size 40 bytes, stm32f3xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_startup
</UL>

<P><STRONG><a name="[66]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f3xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[a]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f3xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, system_stm32f3xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xc.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DoorButton::DoorButton(unsigned short, unsigned char, Board*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, door_button.o(i._ZN10DoorButtonC1EthP5Board))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DoorButton::DoorButton(unsigned short, unsigned char, Board*) &rArr; Button::Button(unsigned short, unsigned char, Board*)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button::Button(unsigned short, unsigned char, Board*)
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
</UL>

<P><STRONG><a name="[a4]"></a>DoorButton::DoorButton__sub_object(unsigned short, unsigned char, Board*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, door_button.o(i._ZN10DoorButtonC1EthP5Board), UNUSED)

<P><STRONG><a name="[6f]"></a>ButtonLatch::ButtonLatch(unsigned short, unsigned char, Board*)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, button_latch.o(i._ZN11ButtonLatchC1EthP5Board))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonLatch::ButtonLatch(unsigned short, unsigned char, Board*)
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonLatch::resetLatch() const
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
</UL>

<P><STRONG><a name="[a5]"></a>ButtonLatch::ButtonLatch__sub_object(unsigned short, unsigned char, Board*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, button_latch.o(i._ZN11ButtonLatchC1EthP5Board), UNUSED)

<P><STRONG><a name="[9c]"></a>ButtonLatch::~ButtonLatch()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, button_latch.o(i._ZN11ButtonLatchD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>ButtonLatch::~ButtonLatch__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, button_latch.o(i._ZN11ButtonLatchD1Ev), UNUSED)

<P><STRONG><a name="[71]"></a>ProgramManager::selectProgram(unsigned char)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, program_manager.o(i._ZN14ProgramManager13selectProgramEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ProgramManager::selectProgram(unsigned char) &rArr; ProgramManager::updateProgramStages(unsigned char) const &rArr; Program::addStage(StageType, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramManager::updateProgramStages(unsigned char) const
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramManager::getProgramOffset(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::selectProgram()
</UL>

<P><STRONG><a name="[8a]"></a>ProgramManager::ProgramManager(Program*)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, program_manager.o(i._ZN14ProgramManagerC1EP7Program))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
</UL>

<P><STRONG><a name="[a7]"></a>ProgramManager::ProgramManager__sub_object(Program*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, program_manager.o(i._ZN14ProgramManagerC1EP7Program), UNUSED)

<P><STRONG><a name="[74]"></a>SystemOperator::readyLatch()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, system_operator.o(i._ZN14SystemOperator10readyLatchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemOperator::readyLatch() &rArr; Timer::checkTimer() &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::setTimer(unsigned)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::checkTimer()
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonLatch::setLatch() const
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonLatch::resetLatch() const
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::run()
</UL>

<P><STRONG><a name="[78]"></a>SystemOperator::soundBuzzer()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, system_operator.o(i._ZN14SystemOperator11soundBuzzerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemOperator::soundBuzzer() &rArr; Timer::checkTimer() &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::setTimer(unsigned)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::checkTimer()
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::toggleOff() const
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::toggleOn() const
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::run()
</UL>

<P><STRONG><a name="[7b]"></a>SystemOperator::selectProgram()</STRONG> (Thumb, 328 bytes, Stack size 16 bytes, system_operator.o(i._ZN14SystemOperator13selectProgramEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SystemOperator::selectProgram() &rArr; ProgramManager::selectProgram(unsigned char) &rArr; ProgramManager::updateProgramStages(unsigned char) const &rArr; Program::addStage(StageType, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramManager::selectProgram(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::run()
</UL>

<P><STRONG><a name="[7c]"></a>SystemOperator::run()</STRONG> (Thumb, 518 bytes, Stack size 0 bytes, system_operator.o(i._ZN14SystemOperator3runEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SystemOperator::run() &rArr; SystemOperator::selectProgram() &rArr; ProgramManager::selectProgram(unsigned char) &rArr; ProgramManager::updateProgramStages(unsigned char) const &rArr; Program::addStage(StageType, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegmentDisplay::writeValue(unsigned char) const
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::selectProgram()
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::soundBuzzer()
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::readyLatch()
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::getState() const
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::setState(ProgramState)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::reset()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::incrementSelectedStage()
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::SystemOperator(Program*, ProgramManager*, Timer*, Button*, Button*, Button*, Button*, Button*, DoorButton*, Buzzer*, ButtonLatch*, SevenSegmentDisplay*)
</UL>

<P><STRONG><a name="[82]"></a>SystemOperator::SystemOperator(Program*, ProgramManager*, Timer*, Button*, Button*, Button*, Button*, Button*, DoorButton*, Buzzer*, ButtonLatch*, SevenSegmentDisplay*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_operator.o(i._ZN14SystemOperatorC1EP7ProgramP14ProgramManagerP5TimerP6ButtonS7_S7_S7_S7_P10DoorButtonP6BuzzerP11ButtonLatchP19SevenSegmentDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SystemOperator::SystemOperator(Program*, ProgramManager*, Timer*, Button*, Button*, Button*, Button*, Button*, DoorButton*, Buzzer*, ButtonLatch*, SevenSegmentDisplay*) &rArr; SystemOperator::run() &rArr; SystemOperator::selectProgram() &rArr; ProgramManager::selectProgram(unsigned char) &rArr; ProgramManager::updateProgramStages(unsigned char) const &rArr; Program::addStage(StageType, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::run()
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
</UL>

<P><STRONG><a name="[a8]"></a>SystemOperator::SystemOperator__sub_object(Program*, ProgramManager*, Timer*, Button*, Button*, Button*, Button*, Button*, DoorButton*, Buzzer*, ButtonLatch*, SevenSegmentDisplay*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, system_operator.o(i._ZN14SystemOperatorC1EP7ProgramP14ProgramManagerP5TimerP6ButtonS7_S7_S7_S7_P10DoorButtonP6BuzzerP11ButtonLatchP19SevenSegmentDisplay), UNUSED)

<P><STRONG><a name="[83]"></a>WashingMachine::WashingMachine()</STRONG> (Thumb, 264 bytes, Stack size 64 bytes, washing_machine.o(i._ZN14WashingMachineC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WashingMachine::WashingMachine() &rArr; SystemOperator::SystemOperator(Program*, ProgramManager*, Timer*, Button*, Button*, Button*, Button*, Button*, DoorButton*, Buzzer*, ButtonLatch*, SevenSegmentDisplay*) &rArr; SystemOperator::run() &rArr; SystemOperator::selectProgram() &rArr; ProgramManager::selectProgram(unsigned char) &rArr; ProgramManager::updateProgramStages(unsigned char) const &rArr; Program::addStage(StageType, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button::Button(unsigned short, unsigned char, Board*)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::Timer()
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegmentDisplay::SevenSegmentDisplay(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, Board*)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::Motor(unsigned short, unsigned short, unsigned char, Board*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::Board()
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::Program(SevenSegmentDisplay*, Motor*, Timer*)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::SystemOperator(Program*, ProgramManager*, Timer*, Button*, Button*, Button*, Button*, Button*, DoorButton*, Buzzer*, ButtonLatch*, SevenSegmentDisplay*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramManager::ProgramManager(Program*)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Buzzer(unsigned short, unsigned char, Board*)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonLatch::ButtonLatch(unsigned short, unsigned char, Board*)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorButton::DoorButton(unsigned short, unsigned char, Board*)
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>WashingMachine::WashingMachine__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, washing_machine.o(i._ZN14WashingMachineC1Ev), UNUSED)

<P><STRONG><a name="[87]"></a>SevenSegmentDisplay::SevenSegmentDisplay(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, Board*)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, seven_segment_display.o(i._ZN19SevenSegmentDisplayC1EtttthP5Board))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SevenSegmentDisplay::SevenSegmentDisplay(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, Board*) &rArr; SevenSegmentDisplay::writeValue(unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegmentDisplay::writeValue(unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
</UL>

<P><STRONG><a name="[aa]"></a>SevenSegmentDisplay::SevenSegmentDisplay__sub_object(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, Board*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, seven_segment_display.o(i._ZN19SevenSegmentDisplayC1EtttthP5Board), UNUSED)

<P><STRONG><a name="[84]"></a>Board::Board()</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, board.o(i._ZN5BoardC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Board::Board()
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
</UL>

<P><STRONG><a name="[ab]"></a>Board::Board__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, board.o(i._ZN5BoardC1Ev), UNUSED)

<P><STRONG><a name="[85]"></a>Motor::Motor(unsigned short, unsigned short, unsigned char, Board*)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, motor.o(i._ZN5MotorC1EtthP5Board))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Motor::Motor(unsigned short, unsigned short, unsigned char, Board*)
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::motorControlOff() const
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
</UL>

<P><STRONG><a name="[ac]"></a>Motor::Motor__sub_object(unsigned short, unsigned short, unsigned char, Board*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, motor.o(i._ZN5MotorC1EtthP5Board), UNUSED)

<P><STRONG><a name="[92]"></a>Stage::setDuration(unsigned)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stage.o(i._ZN5Stage11setDurationEj))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::addStage(StageType, unsigned)
</UL>

<P><STRONG><a name="[96]"></a>Stage::setMotorPointer(Motor*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stage.o(i._ZN5Stage15setMotorPointerEP5Motor))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::Program(SevenSegmentDisplay*, Motor*, Timer*)
</UL>

<P><STRONG><a name="[97]"></a>Stage::setTimerPointer(Timer*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stage.o(i._ZN5Stage15setTimerPointerEP5Timer))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::Program(SevenSegmentDisplay*, Motor*, Timer*)
</UL>

<P><STRONG><a name="[95]"></a>Stage::setDisplayPointer(SevenSegmentDisplay*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stage.o(i._ZN5Stage17setDisplayPointerEP19SevenSegmentDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::Program(SevenSegmentDisplay*, Motor*, Timer*)
</UL>

<P><STRONG><a name="[8c]"></a>Stage::run()</STRONG> (Thumb, 396 bytes, Stack size 8 bytes, stage.o(i._ZN5Stage3runEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Stage::run() &rArr; Timer::checkTimer() &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::setTimer(unsigned)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer::checkTimer()
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegmentDisplay::writeValue(unsigned char) const
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::motorAntiClockwise() const
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::motorControlOff() const
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::motorControlOn() const
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::motorClockwise() const
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::setState(ProgramState)
</UL>

<P><STRONG><a name="[91]"></a>Stage::setType(StageType)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stage.o(i._ZN5Stage7setTypeE9StageType))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::addStage(StageType, unsigned)
</UL>

<P><STRONG><a name="[57]"></a>Stage::Stage()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stage.o(i._ZN5StageC1Ev))
<BR>[Address Reference Count : 1]<UL><LI> program.o(i._ZN7ProgramC1EP19SevenSegmentDisplayP5MotorP5Timer)
</UL>
<P><STRONG><a name="[ad]"></a>Stage::Stage__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stage.o(i._ZN5StageC1Ev), UNUSED)

<P><STRONG><a name="[76]"></a>Timer::checkTimer()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timer.o(i._ZN5Timer10checkTimerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Timer::checkTimer() &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::soundBuzzer()
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::readyLatch()
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::run()
</UL>

<P><STRONG><a name="[75]"></a>Timer::setTimer(unsigned)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i._ZN5Timer8setTimerEj))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::soundBuzzer()
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::readyLatch()
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::run()
</UL>

<P><STRONG><a name="[88]"></a>Timer::Timer()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(i._ZN5TimerC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
</UL>

<P><STRONG><a name="[ae]"></a>Timer::Timer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, timer.o(i._ZN5TimerC1Ev), UNUSED)

<P><STRONG><a name="[6e]"></a>Button::Button(unsigned short, unsigned char, Board*)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, button.o(i._ZN6ButtonC1EthP5Board))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Button::Button(unsigned short, unsigned char, Board*)
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorButton::DoorButton(unsigned short, unsigned char, Board*)
</UL>

<P><STRONG><a name="[af]"></a>Button::Button__sub_object(unsigned short, unsigned char, Board*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, button.o(i._ZN6ButtonC1EthP5Board), UNUSED)

<P><STRONG><a name="[86]"></a>Buzzer::Buzzer(unsigned short, unsigned char, Board*)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, buzzer.o(i._ZN6BuzzerC1EthP5Board))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buzzer::Buzzer(unsigned short, unsigned char, Board*)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::toggleOff() const
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
</UL>

<P><STRONG><a name="[b0]"></a>Buzzer::Buzzer__sub_object(unsigned short, unsigned char, Board*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, buzzer.o(i._ZN6BuzzerC1EthP5Board), UNUSED)

<P><STRONG><a name="[7f]"></a>Program::incrementSelectedStage()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, program.o(i._ZN7Program22incrementSelectedStageEv))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::run()
</UL>

<P><STRONG><a name="[80]"></a>Program::reset()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, program.o(i._ZN7Program5resetEv))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::run()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::setState(ProgramState)
</UL>

<P><STRONG><a name="[90]"></a>Program::addStage(StageType, unsigned)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, program.o(i._ZN7Program8addStageE9StageTypej))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Program::addStage(StageType, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::setType(StageType)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::setDuration(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramManager::updateProgramStages(unsigned char) const
</UL>

<P><STRONG><a name="[7e]"></a>Program::setState(ProgramState)</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, program.o(i._ZN7Program8setStateE12ProgramState))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Program::setState(ProgramState) &rArr; Stage::run() &rArr; Timer::checkTimer() &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::reset()
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::getStageState() const
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::run()
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::run()
</UL>

<P><STRONG><a name="[89]"></a>Program::Program(SevenSegmentDisplay*, Motor*, Timer*)</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, program.o(i._ZN7ProgramC1EP19SevenSegmentDisplayP5MotorP5Timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Program::Program(SevenSegmentDisplay*, Motor*, Timer*) &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::setDisplayPointer(SevenSegmentDisplay*)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::setTimerPointer(Timer*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::setMotorPointer(Motor*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
</UL>

<P><STRONG><a name="[b1]"></a>Program::Program__sub_object(SevenSegmentDisplay*, Motor*, Timer*)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, program.o(i._ZN7ProgramC1EP19SevenSegmentDisplayP5MotorP5Timer), UNUSED)

<P><STRONG><a name="[58]"></a>DoorButton::getButtonStatus() const</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, door_button.o(i._ZNK10DoorButton15getButtonStatusEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DoorButton::getButtonStatus() const
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::getGpioIdr(unsigned short, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> door_button.o(.constdata__ZTV10DoorButton)
</UL>
<P><STRONG><a name="[70]"></a>ButtonLatch::resetLatch() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, button_latch.o(i._ZNK11ButtonLatch10resetLatchEv))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::setGpioOdr(unsigned short, unsigned char, PinState) const
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::readyLatch()
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonLatch::ButtonLatch(unsigned short, unsigned char, Board*)
</UL>

<P><STRONG><a name="[77]"></a>ButtonLatch::setLatch() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, button_latch.o(i._ZNK11ButtonLatch8setLatchEv))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::setGpioOdr(unsigned short, unsigned char, PinState) const
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::readyLatch()
</UL>

<P><STRONG><a name="[72]"></a>ProgramManager::getProgramOffset(unsigned char) const</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, program_manager.o(i._ZNK14ProgramManager16getProgramOffsetEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ProgramManager::getProgramOffset(unsigned char) const &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramManager::selectProgram(unsigned char)
</UL>

<P><STRONG><a name="[73]"></a>ProgramManager::updateProgramStages(unsigned char) const</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, program_manager.o(i._ZNK14ProgramManager19updateProgramStagesEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ProgramManager::updateProgramStages(unsigned char) const &rArr; Program::addStage(StageType, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::addStage(StageType, unsigned)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramManager::selectProgram(unsigned char)
</UL>

<P><STRONG><a name="[81]"></a>SevenSegmentDisplay::writeValue(unsigned char) const</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, seven_segment_display.o(i._ZNK19SevenSegmentDisplay10writeValueEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SevenSegmentDisplay::writeValue(unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::setGpioOdr(unsigned short, unsigned char, PinState) const
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegmentDisplay::SevenSegmentDisplay(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, Board*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::run()
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::run()
</UL>

<P><STRONG><a name="[98]"></a>Board::getGpioIdr(unsigned short, unsigned char) const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, board.o(i._ZNK5Board10getGpioIdrEth))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button::getButtonStatus() const
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorButton::getButtonStatus() const
</UL>

<P><STRONG><a name="[99]"></a>Board::setGpioOdr(unsigned short, unsigned char, PinState) const</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, board.o(i._ZNK5Board10setGpioOdrEth8PinState))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SevenSegmentDisplay::writeValue(unsigned char) const
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::motorAntiClockwise() const
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::motorControlOff() const
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::motorControlOn() const
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::motorClockwise() const
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::toggleOff() const
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::toggleOn() const
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonLatch::setLatch() const
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonLatch::resetLatch() const
</UL>

<P><STRONG><a name="[8f]"></a>Motor::motorClockwise() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, motor.o(i._ZNK5Motor14motorClockwiseEv))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::setGpioOdr(unsigned short, unsigned char, PinState) const
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::run()
</UL>

<P><STRONG><a name="[8e]"></a>Motor::motorControlOn() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, motor.o(i._ZNK5Motor14motorControlOnEv))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::setGpioOdr(unsigned short, unsigned char, PinState) const
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::run()
</UL>

<P><STRONG><a name="[8b]"></a>Motor::motorControlOff() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, motor.o(i._ZNK5Motor15motorControlOffEv))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::setGpioOdr(unsigned short, unsigned char, PinState) const
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Motor::Motor(unsigned short, unsigned short, unsigned char, Board*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::run()
</UL>

<P><STRONG><a name="[8d]"></a>Motor::motorAntiClockwise() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, motor.o(i._ZNK5Motor18motorAntiClockwiseEv))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::setGpioOdr(unsigned short, unsigned char, PinState) const
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stage::run()
</UL>

<P><STRONG><a name="[93]"></a>Stage::getStageState() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stage.o(i._ZNK5Stage13getStageStateEv))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::setState(ProgramState)
</UL>

<P><STRONG><a name="[59]"></a>Button::getButtonStatus() const</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, button.o(i._ZNK6Button15getButtonStatusEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Button::getButtonStatus() const
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::getGpioIdr(unsigned short, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.constdata__ZTV6Button)
</UL>
<P><STRONG><a name="[79]"></a>Buzzer::toggleOn() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, buzzer.o(i._ZNK6Buzzer8toggleOnEv))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::setGpioOdr(unsigned short, unsigned char, PinState) const
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::soundBuzzer()
</UL>

<P><STRONG><a name="[7a]"></a>Buzzer::toggleOff() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, buzzer.o(i._ZNK6Buzzer9toggleOffEv))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board::setGpioOdr(unsigned short, unsigned char, PinState) const
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::soundBuzzer()
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Buzzer(unsigned short, unsigned char, Board*)
</UL>

<P><STRONG><a name="[7d]"></a>Program::getState() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, program.o(i._ZNK7Program8getStateEv))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemOperator::run()
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program::Program(SevenSegmentDisplay*, Motor*, Timer*)
</UL>

<P><STRONG><a name="[b2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[9b]"></a>board_startup</STRONG> (Thumb, 100 bytes, Stack size 72 bytes, board_startup.o(i.board_startup))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = board_startup &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>main</STRONG> (Thumb, 30 bytes, Stack size 560 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = main &rArr; board_startup &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_startup
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WashingMachine::WashingMachine()
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonLatch::~ButtonLatch()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[68]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f3xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
